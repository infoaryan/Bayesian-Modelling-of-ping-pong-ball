#If you do not have BiocManager and rhdf5 packages installed, you need to install these first.
#install.packages("BiocManager")
#BiocManager::install("rhdf5")
library(rhdf5)
#This command lists all the information in this dataset.
#Please do not include it in the knitted PDF, as it takes 20+ pages
#h5ls("MN5008_grid_data_equal_speeds.hdf5",)
n=60;
xyz.obs<-h5read("MN5008_grid_data_equal_speeds.hdf5","/originals/405/positions")[,2:(n+1)];
#Read positions of simulation number 405
xo=xyz.obs[1,];
yo=xyz.obs[2,];
zo=xyz.obs[3,];
vxvyvz.obs<-h5read("MN5008_grid_data_equal_speeds.hdf5","/originals/405/velocities")[,2:(n+1)];
#Read velocities of simulation number 405
vxo<-vxvyvz.obs[1,];
vyo=vxvyvz.obs[2,];
vzo=vxvyvz.obs[3,];
T<-h5read("MN5008_grid_data_equal_speeds.hdf5","/originals/405/time_stamps")[2:(n+1)];
library(rjags)
# Defining the bayesian model here using JAGS
model_string <- "
model {
# First we will define the priors as recommended in the lecture
# First we will define the priors as recommended in the lecture
# Defining the priors for initial positions
# First we will define the priors as recommended in the lecture
# Defining the priors for initial positions
x[1] ~ dnorm(0, 1)
y[1] ~ dnorm(0, 1)
z[1] ~ dnorm(0, 1)
# Defining the priors for initial velocities
# Defining the priors for initial velocities
vx[1] ~ dnorm(0, 25)
vy[1] ~ dnorm(0, 25)
vz[1] ~ dnorm(0, 25)
# Defining the priors for precision parameters
# Defining the priors for precision parameters
tau_pos ~ dgamma(0.1, 0.1)
tau_vel ~ dgamma(0.1, 0.1)
tau_pos_o ~ dgamma(0.1, 0.001)
tau_vel_o ~ dgamma(0.1, 0.001)
# Defining the priors for angular velocities
# Defining the priors for angular velocities
omega_x ~ dnorm(0, 0.1)
omega_y ~ dnorm(0, 0.1)
omega_z ~ dnorm(0, 0.1)
# Now, here we are defining the dynamic model as explaind in the lecture
# Now, here we are defining the dynamic model as explaind in the lecture
for (k in 2:length(T)) {
# Updating all the positions of the ping-pong ball
# Updating all the positions of the ping-pong ball
x[k] <- x[k-1] + vx[k-1] * dt
y[k] <- y[k-1] + vy[k-1] * dt
z[k] <- z[k-1] + vz[k-1] * dt
# Calculate velocity magnitude as ||V||
# Calculate velocity magnitude as ||V||
V_mag <- sqrt(vx[k-1]^2 + vy[k-1]^2 + vz[k-1]^2)
# Updating the all velocities
# Updating the all velocities
vx[k] <- vx[k-1] + (-k_d * V_mag * vx[k-1] + k_m * (omega_y * vz[k-1] - omega_z * vy[k-1])) * dt
vy[k] <- vy[k-1] + (-k_d * V_mag * vy[k-1] + k_m * (omega_z * vx[k-1] - omega_x * vz[k-1])) * dt
vz[k] <- vz[k-1] + (-k_d * V_mag * vz[k-1] + k_m * (omega_x * vy[k-1] - omega_y * vx[k-1])) * dt
# Observation model
# Observation model
xo[k] ~ dnorm(x[k], tau_pos_o)
yo[k] ~ dnorm(y[k], tau_pos_o)
zo[k] ~ dnorm(z[k], tau_pos_o)
vxo[k] ~ dnorm(vx[k], tau_vel_o)
vyo[k] ~ dnorm(vy[k], tau_vel_o)
vzo[k] ~ dnorm(vz[k], tau_vel_o)
}
# Observations
# Observations
for (k in 1:length(T)) {
xo[k] ~ dnorm(x[k], tau_pos_o)
yo[k] ~ dnorm(y[k], tau_pos_o)
zo[k] ~ dnorm(z[k], tau_pos_o)
vxo[k] ~ dnorm(vx[k], tau_vel_o)
vyo[k] ~ dnorm(vy[k], tau_vel_o)
vzo[k] ~ dnorm(vz[k], tau_vel_o)
}
}
"
# Definign the constants
k_d <- -0.13682027
k_m <- 0.00600089
# Combine data
data_list <- list(
xo = xo,
yo = yo,
zo = zo,
vxo = vxo,
vyo = vyo,
vzo = vzo,
T = T,
dt = diff(T)[1],  # Assuming uniform time steps
k_d = k_d,
k_m = k_m
)
# Define parameters to monitor
params <- c("x", "y", "z", "vx", "vy", "vz","tau_pos", "tau_vel",
"tau_pos_o", "tau_vel_o", "omega_x", "omega_y", "omega_z")
# Initialize JAGS
model <- jags.model(textConnection(model_string), data = data_list, n.chains = 3)
library(rjags)
# Dear Instructor, I am using JAGS here as my probramming laguage for the model, as I am currently practicing STAN, and will soon learn that to implement this model too!
# Defining the bayesian model here using JAGS
model_string <- "
model {
# First we will define the priors as recommended in the lecture
# Defining the priors for initial positions
x[1] ~ dnorm(0, 1)
y[1] ~ dnorm(0, 1)
z[1] ~ dnorm(0, 1)
# Defining the priors for initial velocities
vx[1] ~ dnorm(0, 25)
vy[1] ~ dnorm(0, 25)
vz[1] ~ dnorm(0, 25)
# Defining the priors for precision parameters
tau_pos ~ dgamma(0.1, 0.1)
tau_vel ~ dgamma(0.1, 0.1)
tau_pos_o ~ dgamma(0.1, 0.001)
tau_vel_o ~ dgamma(0.1, 0.001)
# Defining the priors for angular velocities
omega_x ~ dnorm(0, 0.1)
omega_y ~ dnorm(0, 0.1)
omega_z ~ dnorm(0, 0.1)
# Now, here we are defining the dynamic model as explaind in the lecture
for (k in 2:length(T)) {
# Updating all the positions of the ping-pong ball
x[k] <- x[k-1] + vx[k-1] * dt
y[k] <- y[k-1] + vy[k-1] * dt
z[k] <- z[k-1] + vz[k-1] * dt
# Calculate velocity magnitude as
V_mag <- sqrt(vx[k-1]^2 + vy[k-1]^2 + vz[k-1]^2)
# Updating the all velocities
vx[k] <- vx[k-1] + (-k_d * V_mag * vx[k-1] + k_m * (omega_y * vz[k-1] - omega_z * vy[k-1])) * dt
vy[k] <- vy[k-1] + (-k_d * V_mag * vy[k-1] + k_m * (omega_z * vx[k-1] - omega_x * vz[k-1])) * dt
vz[k] <- vz[k-1] + (-k_d * V_mag * vz[k-1] + k_m * (omega_x * vy[k-1] - omega_y * vx[k-1])) * dt
# Observation model
xo[k] ~ dnorm(x[k], tau_pos_o)
yo[k] ~ dnorm(y[k], tau_pos_o)
zo[k] ~ dnorm(z[k], tau_pos_o)
vxo[k] ~ dnorm(vx[k], tau_vel_o)
vyo[k] ~ dnorm(vy[k], tau_vel_o)
vzo[k] ~ dnorm(vz[k], tau_vel_o)
}
# Observations
for (k in 1:length(T)) {
xo[k] ~ dnorm(x[k], tau_pos_o)
yo[k] ~ dnorm(y[k], tau_pos_o)
zo[k] ~ dnorm(z[k], tau_pos_o)
vxo[k] ~ dnorm(vx[k], tau_vel_o)
vyo[k] ~ dnorm(vy[k], tau_vel_o)
vzo[k] ~ dnorm(vz[k], tau_vel_o)
}
}
"
# Definign the constants
k_d <- -0.13682027
k_m <- 0.00600089
# Combine data
data_list <- list(
xo = xo,
yo = yo,
zo = zo,
vxo = vxo,
vyo = vyo,
vzo = vzo,
T = T,
dt = diff(T)[1],  # Assuming uniform time steps
k_d = k_d,
k_m = k_m
)
# Define parameters to monitor
params <- c("x", "y", "z", "vx", "vy", "vz","tau_pos", "tau_vel",
"tau_pos_o", "tau_vel_o", "omega_x", "omega_y", "omega_z")
# Initialize JAGS
model <- jags.model(textConnection(model_string), data = data_list, n.chains = 3)
library(rjags)
# Dear Instructor, I am using JAGS here as my probramming laguage for the model, as I am currently practicing STAN, and will soon learn that to implement this model too!
# Defining the bayesian model here using JAGS
model_string <- "
model {
# First we will define the priors as recommended in the lecture
# Defining the priors for initial positions
x[1] ~ dnorm(0, 1)
y[1] ~ dnorm(0, 1)
z[1] ~ dnorm(0, 1)
# Defining the priors for initial velocities
vx[1] ~ dnorm(0, 25)
vy[1] ~ dnorm(0, 25)
vz[1] ~ dnorm(0, 25)
# Defining the priors for precision parameters
tau_pos ~ dgamma(0.1, 0.1)
tau_vel ~ dgamma(0.1, 0.1)
tau_pos_o ~ dgamma(0.1, 0.001)
tau_vel_o ~ dgamma(0.1, 0.001)
# Defining the priors for angular velocities
omega_x ~ dnorm(0, 0.1)
omega_y ~ dnorm(0, 0.1)
omega_z ~ dnorm(0, 0.1)
# Calculate velocity magnitude
for (k in 1:length(T)) {
V_mag[k] <- sqrt(vx[k]^2 + vy[k]^2 + vz[k]^2)
}
# Now, here we are defining the dynamic model as explaind in the lecture
for (k in 2:length(T)) {
# Updating all the positions of the ping-pong ball
x[k] <- x[k-1] + vx[k-1] * dt
y[k] <- y[k-1] + vy[k-1] * dt
z[k] <- z[k-1] + vz[k-1] * dt
# Calculate velocity magnitude as
# V_mag <- sqrt(vx[k-1]^2 + vy[k-1]^2 + vz[k-1]^2)
# Updating the all velocities
vx[k] <- vx[k-1] + (-k_d * V_mag[k-1] * vx[k-1] + k_m * (omega_y * vz[k-1] - omega_z * vy[k-1])) * dt
vy[k] <- vy[k-1] + (-k_d * V_mag[k-1] * vy[k-1] + k_m * (omega_z * vx[k-1] - omega_x * vz[k-1])) * dt
vz[k] <- vz[k-1] + (-k_d * V_mag[k-1] * vz[k-1] + k_m * (omega_x * vy[k-1] - omega_y * vx[k-1])) * dt
# Observation model
xo[k] ~ dnorm(x[k], tau_pos_o)
yo[k] ~ dnorm(y[k], tau_pos_o)
zo[k] ~ dnorm(z[k], tau_pos_o)
vxo[k] ~ dnorm(vx[k], tau_vel_o)
vyo[k] ~ dnorm(vy[k], tau_vel_o)
vzo[k] ~ dnorm(vz[k], tau_vel_o)
}
# Observations
for (k in 1:length(T)) {
xo[k] ~ dnorm(x[k], tau_pos_o)
yo[k] ~ dnorm(y[k], tau_pos_o)
zo[k] ~ dnorm(z[k], tau_pos_o)
vxo[k] ~ dnorm(vx[k], tau_vel_o)
vyo[k] ~ dnorm(vy[k], tau_vel_o)
vzo[k] ~ dnorm(vz[k], tau_vel_o)
}
}
"
# Definign the constants
k_d <- -0.13682027
k_m <- 0.00600089
# Combine data
data_list <- list(
xo = xo,
yo = yo,
zo = zo,
vxo = vxo,
vyo = vyo,
vzo = vzo,
T = T,
dt = diff(T)[1],  # Assuming uniform time steps
k_d = k_d,
k_m = k_m
)
# Define parameters to monitor
params <- c("x", "y", "z", "vx", "vy", "vz","tau_pos", "tau_vel",
"tau_pos_o", "tau_vel_o", "omega_x", "omega_y", "omega_z")
# Initialize JAGS
model <- jags.model(textConnection(model_string), data = data_list, n.chains = 3)
library(rjags)
# Dear Instructor, I am using JAGS here as my probramming laguage for the model, as I am currently practicing STAN, and will soon learn that to implement this model too!
# Defining the bayesian model here using JAGS
model_string <- "
model {
# First we will define the priors as recommended in the lecture
# Defining the priors for initial positions
x[1] ~ dnorm(0, 1)
y[1] ~ dnorm(0, 1)
z[1] ~ dnorm(0, 1)
# Defining the priors for initial velocities
vx[1] ~ dnorm(0, 25)
vy[1] ~ dnorm(0, 25)
vz[1] ~ dnorm(0, 25)
# Defining the priors for precision parameters
tau_pos ~ dgamma(0.1, 0.1)
tau_vel ~ dgamma(0.1, 0.1)
tau_pos_o ~ dgamma(0.1, 0.001)
tau_vel_o ~ dgamma(0.1, 0.001)
# Defining the priors for angular velocities
omega_x ~ dnorm(0, 0.1)
omega_y ~ dnorm(0, 0.1)
omega_z ~ dnorm(0, 0.1)
# Calculate velocity magnitude
for (k in 1:length(T)) {
V_mag[k] <- sqrt(vx[k]^2 + vy[k]^2 + vz[k]^2)
}
# Now, here we are defining the dynamic model as explaind in the lecture
for (k in 2:length(T)) {
# Updating all the positions of the ping-pong ball
x[k] <- x[k-1] + vx[k-1] * dt
y[k] <- y[k-1] + vy[k-1] * dt
z[k] <- z[k-1] + vz[k-1] * dt
# Calculate velocity magnitude as
# V_mag <- sqrt(vx[k-1]^2 + vy[k-1]^2 + vz[k-1]^2)
# Updating the all velocities
vx[k] <- vx[k-1] + (-k_d * V_mag[k-1] * vx[k-1] + k_m * (omega_y * vz[k-1] - omega_z * vy[k-1])) * dt
vy[k] <- vy[k-1] + (-k_d * V_mag[k-1] * vy[k-1] + k_m * (omega_z * vx[k-1] - omega_x * vz[k-1])) * dt
vz[k] <- vz[k-1] + (-k_d * V_mag[k-1] * vz[k-1] + k_m * (omega_x * vy[k-1] - omega_y * vx[k-1])) * dt
# Observation model
#xo[k] ~ dnorm(x[k], tau_pos_o)
#yo[k] ~ dnorm(y[k], tau_pos_o)
#zo[k] ~ dnorm(z[k], tau_pos_o)
#vxo[k] ~ dnorm(vx[k], tau_vel_o)
#vyo[k] ~ dnorm(vy[k], tau_vel_o)
#vzo[k] ~ dnorm(vz[k], tau_vel_o)
}
# Observations
for (k in 1:length(T)) {
xo[k] ~ dnorm(x[k], tau_pos_o)
yo[k] ~ dnorm(y[k], tau_pos_o)
zo[k] ~ dnorm(z[k], tau_pos_o)
vxo[k] ~ dnorm(vx[k], tau_vel_o)
vyo[k] ~ dnorm(vy[k], tau_vel_o)
vzo[k] ~ dnorm(vz[k], tau_vel_o)
}
}
"
# Definign the constants
k_d <- -0.13682027
k_m <- 0.00600089
# Combine data
data_list <- list(
xo = xo,
yo = yo,
zo = zo,
vxo = vxo,
vyo = vyo,
vzo = vzo,
T = T,
dt = diff(T)[1],  # Assuming uniform time steps
k_d = k_d,
k_m = k_m
)
# Define parameters to monitor
params <- c("x", "y", "z", "vx", "vy", "vz","tau_pos", "tau_vel",
"tau_pos_o", "tau_vel_o", "omega_x", "omega_y", "omega_z")
# Initialize JAGS
model <- jags.model(textConnection(model_string), data = data_list, n.chains = 3)
# Update model
#update(jags_model, 1000)
# Sampling
#samples <- coda.samples(jags_model, variable.names = params, n.iter = 5000)
